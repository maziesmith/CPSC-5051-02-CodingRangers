@using TreeAttendance.Models.Enums
@model TreeAttendance.Models.ViewModels.AttendanceByStudentViewModel
@{
    ViewBag.Title = "Attendance by Student";
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item" aria-current="page"><a href="~/AdminHome">Admin</a></li>
        <li class="breadcrumb-item" aria-current="page"> <a href="~/Attendance">Attendance</a></li>
        <li class="breadcrumb-item active" aria-current="page">By Student: @Model.StudentName</li>
    </ol>
</nav>
<div class="page-header">Past Attendance Records of @Model.StudentName</div>

<br />
<nav class="navbar navbar-expand-lg">
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNavDropdown" aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNavDropdown">
        <ul class="navbar-nav">
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Select Month
                </a>
                <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                    <a class="dropdown-item" href="/Attendance/ByStudent/@Url.RequestContext.RouteData.Values["id"]/6">June 2018</a>
                    <a class="dropdown-item" href="/Attendance/ByStudent/@Url.RequestContext.RouteData.Values["id"]/5">May 2018</a>
                    <a class="dropdown-item" href="/Attendance/ByStudent/@Url.RequestContext.RouteData.Values["id"]/4">April 2018</a>
                    <a class="dropdown-item" href="/Attendance/ByStudent/@Url.RequestContext.RouteData.Values["id"]/3">March 2018</a>
                    <a class="dropdown-item" href="/Attendance/ByStudent/@Url.RequestContext.RouteData.Values["id"]/2">Febuary 2018</a>
                    <a class="dropdown-item" href="/Attendance/ByStudent/@Url.RequestContext.RouteData.Values["id"]/1">January 2018</a>
                </div>
            </li>
        </ul>
    </div>
</nav>
@if (Model.AttendanceList.Count == 0)
{
    <br />
    <p>No attendance record of this student</p>
    <br />
}
else
{
    <div class="bg-white">
        <table class="table table-striped">
            <thead>
                <tr class="thead">
                    <th>Date</th>
                    <th>Status</th>
                    <th>Check-in Time</th>
                    <th>Check-out Time</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @for (int i = Model.AttendanceList.Count - 1; i >= 0; i--)
                {
                    var item = Model.AttendanceList[i];
                    <tr>
                        <td>@item.Date.ToString("D")</td>
                        <td>
                            @if (item.Attendance.Status == AttendanceStatusEnum.AbsentUnexcused)
                            {

                                <span class="badge badge-pill badge-danger">Absent Unexcused</span>

                            }
                            else if (item.Attendance.Status == AttendanceStatusEnum.AbsentExcused)
                            {

                                <span class="badge badge-pill badge-warning">Absent Excused</span>

                            }
                            else if (item.Attendance.Status == AttendanceStatusEnum.Late)
                            {

                                <span class="badge badge-pill badge-dark">Late</span>

                            }
                            else if (item.Attendance.Status == AttendanceStatusEnum.LateLeft)
                            {

                                <span class="badge badge-pill badge-dark">Late</span>

                                <span class="badge badge-pill badge-info">Left Early</span>

                            }
                            else if (item.Attendance.Status == AttendanceStatusEnum.OnTime)
                            {

                                <span class="badge badge-pill badge-success">On Time</span>

                            }
                            else if (item.Attendance.Status == AttendanceStatusEnum.OnTimeLeft)
                            {

                                <span class="badge badge-pill badge-success">On time</span>

                                <span class="badge badge-pill badge-info">Left Early</span>

                            }
                        </td>
                        <td>
                            @if (@item.Attendance.AttendanceCheckIns.Count != 0)
                            {
                                var inTime = string.Format("{0:00}:{1:00}", @item.Attendance.AttendanceCheckIns.First().CheckIn.Hours, @item.Attendance.AttendanceCheckIns.First().CheckIn.Minutes);
                                @inTime
                            }

                        </td>
                        <td>
                            @if (@item.Attendance.AttendanceCheckIns.Count != 0)
                            {
                                var outTime = string.Format("{0:00}:{1:00}", @item.Attendance.AttendanceCheckIns.First().CheckOut.Hours, @item.Attendance.AttendanceCheckIns.First().CheckOut.Minutes);
                                @outTime
                            }
                        </td>
                        <td>
                            <a href="~/Attendance/Read/@item.Attendance.Id">
                                Edit
                            </a>
                        </td>
                    </tr>
                }


            </tbody>
        </table>
    </div>
}

<br />
<br />